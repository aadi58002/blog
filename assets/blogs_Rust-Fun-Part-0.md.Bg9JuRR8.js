import{_ as t,c as e,o as i,a5 as a}from"./chunks/framework.D7ootnaT.js";const b=JSON.parse('{"title":"Rust Fun (Part 0)","description":"Some fun activities to try out with rust","frontmatter":{"title":"Rust Fun (Part 0)","description":"Some fun activities to try out with rust","production":false,"tags":["Rust","Projects","Fun"]},"headers":[],"relativePath":"blogs/Rust-Fun-Part-0.md","filePath":"blogs/Rust-Fun-Part-0.md","lastUpdated":1713190580000}'),s={name:"blogs/Rust-Fun-Part-0.md"},o=a('<nav class="table-of-contents"><ul></ul></nav><h1 id="what-to-do" tabindex="-1">What to do? <a class="header-anchor" href="#what-to-do" aria-label="Permalink to &quot;What to do?&quot;">â€‹</a></h1><p>When ever trying to learn a language it is hard to come up with things to do and find motivation to complete big/long-term projects for me. It would be fun to try some fun stuff which is not too complex. While also getting familiar to the tooling related to that language. For example below is a list of things which don&#39;t take much time to implement and can be fun to achieve and learn with.</p><ul class="contains-task-list"><li>[-] Write a rust proc macro which takes away or adds some fields to a struct. <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Remove all fields from a struct/enum. (Derive Macro)</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Remove all String type fields from a struct. (Derive Macro)</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Wrap all the type wrapped in Option if there is a <code>#[option]</code> attribute on the field. (Derive attribute macro)</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Might as well write some tests for the macros ðŸ˜„.</li></ul></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Calling a c/c++ function with FFI from rust and vice-versa.</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Try to write hello world from bios in a virtual machine -&gt; <a href="https://animeshz.github.io/site/blogs/demystifying-uefi.html" target="_blank" rel="noreferrer">Demystifying UEFI</a></li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Making a live server like the <code>python -m http.server -d .</code>.</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Write a compress utility which compresses your data(Directory) into a protobuf file.</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> Setup a local rust crate registery and publishing a crate to that registery.</li></ul><h1 id="what-should-you-know" tabindex="-1">What should you know? <a class="header-anchor" href="#what-should-you-know" aria-label="Permalink to &quot;What should you know?&quot;">â€‹</a></h1><ul><li>You should be familiar with basic concepts of rust like ownership and basic types (struct,enums etc).</li><li>You should know some terms like macros, lifetimes and crates.</li><li>Just be curious about things (There are a lot of bread crumbs which will be there in the series follow them to your heart content until your curiocity is satified)</li></ul><h1 id="other-great-resources" tabindex="-1">Other Great resources <a class="header-anchor" href="#other-great-resources" aria-label="Permalink to &quot;Other Great resources&quot;">â€‹</a></h1><p>If you have the time and dedication i would highly recommend that you try to complete one of the projects under the following repo they are a slighly longer time investment but the projects are great.</p><ul><li>Great repo to get idea for next big project -&gt; <a href="https://github.com/codecrafters-io/build-your-own-x" target="_blank" rel="noreferrer">Build Your own X</a></li></ul>',9),l=[o];function r(c,n,h,u,d,m){return i(),e("div",null,l)}const k=t(s,[["render",r]]);export{b as __pageData,k as default};
